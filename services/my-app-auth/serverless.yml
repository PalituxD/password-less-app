service: my-app-auth
provider:
  name: aws
  runtime: python3.8
  memorySize: 128
  timeout: 15
  stage: ${self:custom.common.currentStage}
  logRetentionInDays: 30
  tracing:
    apiGateway: true
    lambda: true
  iamRoleStatements:
    - ${file(../../shared/serverless.common.yml):lambdaPolicyXRay}
    - ${file(../../shared/serverless.common.yml):lambdaLogGroup}
  environment:
    LOG_ENABLED: "False"
  endpointType: REGIONAL
  apiGateway:
    metrics: true
  logs:
    restApi: true
package:
  individually: True
  include:
    - common/*
plugins:
  - serverless-package-external
  - serverless-offline
  - serverless-iam-roles-per-function
  - serverless-pseudo-parameters
  - serverless-prune-plugin
custom:
  common: ${file(../../shared/serverless.common.yml):common}
  packageExternal:
    external:
      - '../../shared/common'
  serverless-iam-roles-per-function:
    defaultInherit: true
  userPoolName: ${self:service}-user-pool-${self:custom.common.currentStage}
  userPoolClientName: ${self:service}-user-pool-client-${self:custom.common.currentStage}
functions:
  - ${file(./functions/otp/create_auth_challenge/function.yml)}
  - ${file(./functions/otp/define_auth_challenge/function.yml)}
  - ${file(./functions/otp/post_authentication/function.yml)}
  - ${file(./functions/otp/pre_sign_up/function.yml)}
  - ${file(./functions/otp/refresh_token/function.yml)}
  - ${file(./functions/otp/sign_in/function.yml)}
  - ${file(./functions/otp/sign_up/function.yml)}
  - ${file(./functions/otp/verify_auth_challenge_response/function.yml)}
resources:
  - ${file(./resources/cognito-user-pool.yml)}
  - ${file(./resources/cognito-user-pool-client.yml)}
  - ${file(./resources/api-gateway-authorizer.yml)}
  - Resources:
      EventBus:
        Type: AWS::Events::EventBus
        Properties:
          Name: ${self:custom.common.pyEventBusName}
  - Outputs:
      ApiGatewayRestApiId:
        Value:
          Ref: ApiGatewayRestApi
        Export:
          Name: ${self:custom.common.currentStage}-MyAppRestApiId
      ApiGatewayRestApiRootResourceId:
        Value:
          Fn::GetAtt: [ApiGatewayRestApi, RootResourceId]
        Export:
          Name: ${self:custom.common.currentStage}-MyAppRestApiRootResourceId